{"version":3,"sources":["../../../../assets/script/assets/script/Container.js"],"names":["cc","Class","extends","Component","properties","cell","default","type","Prefab","grid","Array","gameOverDia","canvas","Node","onLoad","gridSize","spawnGrids","initGridValue","updateDisplay","score","getComponent","scoreDisplay","string","toString","setInputControl","clickNewGameButton","self","flipped","rotated","played","systemEvent","on","SystemEvent","EventType","KEY_DOWN","event","keyCode","KEY","down","rotateGrid","keyPressed","up","flipGrid","left","right","node","TOUCH_START","p1","getLocation","TOUCH_END","p2","difX","Math","abs","x","difY","y","hypoDist","sqrt","sin","blankGrid","extra","addNumber","cellSize","gridArray","i","length","j","instantiate","parent","width","height","options","push","spot","floor","random","r","animationC","Animation","play","past","copyGrid","operate","changed","compare","gameOver","isGameOver","console","log","reverse","copiedArray","row","slide","combine","arr","filter","value","missing","zeros","fill","concat","a","b","gameOverDiaglog","setPosition","find","addChild","val","numberDisplay","readJSON","colorStr","color","hexToColor","callback","loader","loadRes","err","gridColor","valueString","returnColor"],"mappings":"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","file":"Container.js","sourceRoot":"../../../../assets/script","sourcesContent":["\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        cell: {\n            default: null,\n            type: cc.Prefab\n        },\n\n        grid: {\n            default: [],\n            type: [cc.Array]\n        },\n\n        gameOverDia: {\n            default: null,\n            type: cc.Prefab\n        },\n\n        canvas: {\n            default: null,\n            type: cc.Node\n        },\n\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad() {\n\n        //构造格子显示在 browser\n        this.gridSize = 16;\n        this.spawnGrids(this.gridSize / 4);\n\n        //初始化游戏逻辑\n        this.initGridValue();\n\n        //刷新所有格子显示内容\n        this.updateDisplay();\n        \n        //初始化分数计数和显示\n        this.score = 0;\n        this.canvas.getComponent('2048').scoreDisplay.string = 'Score: ' + this.score.toString();\n\n        //游戏运行开始\n        this.setInputControl();\n    },\n\n    //New Game 按钮，重新开始一个新游戏\n    clickNewGameButton: function () {\n\n        this.initGridValue();\n        this.score = 0;\n        this.updateDisplay();\n        this.canvas.getComponent('2048').scoreDisplay.string = 'Score: ' + this.score.toString();\n\n\n    },\n\n    //监听所有触摸事件，实现所有指令任务\n    setInputControl: function () {\n\n        let self = this;\n        self.flipped = false;\n        self.rotated = false;\n        self.played = true;\n\n        //键盘监听用户输入，用于测试游戏逻辑正确性\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, function (event) {\n            switch (event.keyCode) {\n                case cc.KEY.down:\n                    self.rotateGrid(self.grid);\n                    self.rotated = true;\n                    self.keyPressed();\n                    break;\n\n                case cc.KEY.up:\n                    self.rotateGrid(self.grid);\n                    self.flipGrid(self.grid);\n                    self.flipped = true;\n                    self.rotated = true;\n                    self.keyPressed();\n                    break;\n\n\n                case cc.KEY.left:\n                    self.flipGrid(self.grid);\n                    self.flipped = true;\n                    self.keyPressed();\n                    break;\n\n\n                case cc.KEY.right:\n                    self.keyPressed();\n                    break;\n            }\n        });\n\n        //监听触摸起始点\n        this.node.on(cc.Node.EventType.TOUCH_START, function (event) {\n            self.p1 = event.getLocation();\n        });\n\n        //监听触摸结束点，执行相应逻辑\n        this.node.on(cc.Node.EventType.TOUCH_END, function (event) {\n            self.p2 = event.getLocation();\n\n            //起始和终止触摸点在x轴和y轴移动的距离，坐标原点在屏幕左下角\n            self.difX = Math.abs(self.p2.x - self.p1.x);\n            self.difY = Math.abs(self.p2.y - self.p1.y);\n            self.hypoDist = Math.sqrt(self.difX * self.difX + self.difY * self.difY);\n\n            //大方向向右滑动\n            if (self.p2.x > self.p1.x && self.difY < Math.sin(45) * self.hypoDist) {\n                self.keyPressed();\n                return;\n            }\n\n            //大方向向左滑动\n            else if (self.p2.x < self.p1.x && self.difY < Math.sin(45) * self.hypoDist) {\n                self.flipGrid(self.grid);\n                self.flipped = true;\n                self.keyPressed();\n                return;\n            }\n\n            //大方向向上滑动\n            else if (self.p2.y > self.p1.y && self.difX < Math.sin(45) * self.hypoDist) {\n                self.rotateGrid(self.grid);\n                self.flipGrid(self.grid);\n                self.flipped = true;\n                self.rotated = true;\n                self.keyPressed();\n                return;\n            }\n\n            //大方向向下滑动\n            else if (self.p2.y < self.p1.y && self.difX < Math.sin(45) * self.hypoDist) {\n                self.rotateGrid(self.grid);\n                self.rotated = true;\n                self.keyPressed();\n                return;\n            }\n        });\n    },\n\n    //生成一个4*4的2维数组，每个元素的值为0，返回这个2维数组\n    blankGrid: function () {\n        let extra = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]];\n        return extra;\n    },\n\n    //初始化游戏时初始化16个格子的值\n    initGridValue: function () {\n        //初始化每个小格子的具体数值\n        //this.grid 存储16个小格子的数值\n        this.grid = this.blankGrid();\n\n        //在随机两个位置上随机放置2或4\n        this.addNumber();\n        this.addNumber();\n    },\n\n    //构造显示在浏览器中的游戏主体16个方格\n    spawnGrids: function (cellSize) {\n\n        this.gridArray = new Array(cellSize);\n\n        for (let i = 0; i < this.gridArray.length; i++) {\n            this.gridArray[i] = new Array(cellSize);\n            for (let j = 0; j < this.gridArray[i].length; j++) {\n                this.gridArray[i][j] = cc.instantiate(this.cell);\n                this.gridArray[i][j].parent = this.node;\n                this.gridArray[i][j].width = (this.node.width - 50) / 4;\n                this.gridArray[i][j].height = (this.node.height - 50) / 4;\n            }\n        }\n    },\n\n    //选择一个任意位置以50%概率放入2或4\n    addNumber: function () {\n        let options = [];\n        for (let i = 0; i < 4; i++) {\n            for (let j = 0; j < 4; j++) {\n                if (this.grid[i][j] === 0) {\n\n                    //objects\n                    options.push({\n                        x: i,\n                        y: j\n                    });\n                }\n            }\n        }\n        if (options.length > 0) {\n            let spot = Math.floor(Math.random() * options.length);\n            let r = Math.random();\n            this.grid[options[spot].x][options[spot].y] = r > 0.5 ? 2 : 4;\n            //添加动画效果\n            let animationC = this.gridArray[options[spot].x][options[spot].y].getComponent(cc.Animation);\n            animationC.play('initGrid');\n\n        }\n\n\n    },\n\n    //游戏逻辑执行一次\n    keyPressed: function () {\n\n        //复制当前状态下的 this.grid\n        let past = this.copyGrid(this.grid);\n        \n        //执行一维数组合并和位移逻辑\n        for (let i = 0; i < 4; i++) {\n            this.grid[i] = this.operate(this.grid[i]);\n        }\n\n        //复原颠倒顺序的数组\n        if (this.flipped) {\n            this.flipGrid(this.grid);\n            this.flipped = false;\n        }\n        \n        //复原转置的数组\n        if (this.rotated) {\n            this.rotateGrid(this.grid);\n            this.rotated = false;\n        }\n\n        //检测数组是否发生变化\n        let changed = this.compare(past, this.grid);\n        if (changed) {\n            this.addNumber();\n        }\n        \n        //检测游戏结束逻辑\n        let gameOver = this.isGameOver();\n\n        if (gameOver) {\n            console.log('Game Over');\n            //弹出游戏结束对话框\n            this.gameOver();\n        }\n        \n        this.updateDisplay();\n\n    },\n\n    //颠倒2维数组中每一个子数组的内部顺序\n    //参数为整个2维数组\n    flipGrid: function (grid) {\n        for (let i = 0; i < 4; i++) {\n            grid[i].reverse();\n        }\n    },\n\n    //转置2维数组\n    //参数为整个2维数组\n    rotateGrid: function (grid) {\n        let copiedArray = this.copyGrid(grid);\n        for (let i = 0; i < 4; i++) {\n            for (let j = 0; j < 4; j++) {\n                grid[i][j] = copiedArray[j][i];\n            }\n        }\n    },\n\n    //复制2维数组的每一元素\n    //参数为整个2维数组\n    //返回一个新的二维数组\n    copyGrid: function (grid) {\n        let extra = this.blankGrid();\n        for (let i = 0; i < 4; i++) {\n            for (let j = 0; j < 4; j++) {\n                extra[i][j] = grid[i][j];\n            }\n        }\n        return extra;\n    },\n\n    //执行一维数组合并和位移逻辑\n    //参数为一维数组\n    //返回一个新的一维数组\n    operate: function (row) {\n        row = this.slide(row);\n        row = this.combine(row);\n        row = this.slide(row);\n        return row;\n    },\n\n    //将一维数组中所有非0元素按照原来顺序滑到数组末尾，原始位子由0填充\n    //参数为一维数组\n    //返回修改后的一维数组\n    slide: function (row) {\n        //let arr = row.filter(val => val);\n        let arr = row.filter(function (value) {\n            if (value !== 0)\n                return value;\n        });\n        let missing = 4 - arr.length;\n        let zeros = Array(missing).fill(0);\n        arr = zeros.concat(arr);\n        return arr;\n    },\n\n    //一维数组中从末尾开始，相邻的前一个数字相同合并成为一个放置到当前位置，前一个设为0\n    //参数为一维数组\n    //返回修改后的一维数组\n    combine: function (row) {\n        for (let i = 3; i >= 0; i--) {\n            let a = row[i];\n            let b = row[i - 1];\n            if (a === b) {\n                row[i] = a + b;\n                //游戏分数和分数显示同步变化\n                this.score += row[i];\n                this.canvas.getComponent('2048').scoreDisplay.string = 'Score: ' + this.score.toString();\n                row[i - 1] = 0;\n            }\n        }\n        return row;\n    },\n\n    //比较两个二维数组的元素\n    //参数为两个二维数组\n    //相同返回ture,反之false\n    compare: function (a, b) {\n        for (let i = 0; i < 4; i++) {\n            for (let j = 0; j < 4; j++) {\n                if (a[i][j] !== b[i][j]) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    },\n\n    //弹出游戏结束对话框\n    gameOver: function () {\n        let gameOverDiaglog = cc.instantiate(this.gameOverDia);\n        gameOverDiaglog.setPosition(17, -21);\n        cc.find('Canvas').addChild(gameOverDiaglog, 1, 1001);\n\n    },\n\n    //判断游戏是否结束\n    //结束返回true,反之false\n    isGameOver: function () {\n        for (let i = 0; i < 4; i++) {\n            for (let j = 0; j < 4; j++) {\n                if (this.grid[i][j] == 0) {\n                    return false;\n                } \n                \n                if (i !== 3 && this.grid[i][j] == this.grid[i + 1][j]) {\n                    return false;\n                }\n                if (j !== 3 && this.grid[i][j] == this.grid[i][j + 1]) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    },\n\n    //根据this.grid元素的变化，更新游戏显示\n    updateDisplay: function () {\n        var self = this;\n        for (let i = 0; i < 4; i++) {\n            for (let j = 0; j < 4; j++) {\n                let val = this.grid[i][j];\n                if (this.grid[i][j] !== 0) {\n                    //obtain the number which will be displayed on the browser  \n                    this.gridArray[i][j].getComponent('Grid').numberDisplay.string = val.toString();\n\n                    //add color feature to the grids which of the values are not equal to 0\n                    this.readJSON(val, function (colorStr) {\n                        self.gridArray[i][j].color = cc.hexToColor(colorStr);\n                    });\n                } else {\n                    this.gridArray[i][j].getComponent('Grid').numberDisplay.string = '';\n                    this.gridArray[i][j].color = cc.hexToColor('#FFFFFF');\n                }\n            }\n        }\n\n    },\n\n    //读取存储在配置文件中的颜色信息\n    //参数分别为整数，回调函数\n    readJSON: function (value, callback) {\n        //apply JSON to store all the color infor into another file\n        cc.loader.loadRes('config.json', function (err, gridColor) {\n            if (err) {\n                console.log(err);\n                return;\n            }\n            let valueString = value.toString();\n            let returnColor = gridColor[valueString].color;\n\n            if (callback) {\n                callback(returnColor);\n            }\n        });\n    },\n\n});\n"]}